version: 0.2

phases:
  install:
    commands:
#       - CREDENTIALS=$(aaaaaws sts assume-role --role-arn arn:aws:iam::033812576448:role/service-role/codebuild-insearch-t5-service-role --role-session-name codebuild-kubectl --duration-seconds 900)
#       - export AWSaa_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId)"
#       - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
#       - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
#       - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration''')
# #       - apt-get install unzip
# #       - wget https://releases.hashicorp.com/terraform/1.0.0/terraform_1.0.0_linux_amd64.zip
#       - unzip terraform_1.0.0_linux_amd64.zipzip
#       - mv ./terraform /usr/local/bin/
        - python3 -m ensurepip
        - pip3 install --no-cache --upgrade pip setuptools
        - pip3 install awscli
        - CREDENTIALS=$(aws sts assume-role --role-arn arn:aws:iam::033812576448:role/service-role/codebuild-insearch-trail-service-role --role-session-name codebuild-kubectl --duration-seconds 900)
        - echo ${CREDENTIALS}
        - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
        - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
        - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
        - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
        - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
        - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
        - aws configure set region ap-south-1
        - aws configure list
        - apt-get install unzip
        - wget https://releases.hashicorp.com/terraform/1.0.0/terraform_1.0.0_linux_amd64.zip
        - unzip terraform_1.0.0_linux_amd64.zip
        - mv ./terraform /usr/local/bin/
#       # - cd infra
#       # - aws s3 cp s3://clixtream-infra-state-bucket/clixtream.pem ./
#       # - chmod 400 clixtream.pem
        - terraform init -input=false -backend-config=environment/dev/s3-bucket.tfvars
        - terraform plan -out dev-plan.tfplan -var-file=environment/dev/variables.tfvars -input=false
        - terraform apply "dev-plan.tfplan"
#       - aws s3 cp dev-plan.tfplan s3://gudi/infra/
#   build:
#     commands:
#       - terraform init  
#   post_build:
#     commands:
#       - echo Build completed on `date`
#       - mvn package
# artifacts:
#   files:
#     - target/my-app-1.0-SNAPSHOT.jar
#     - appspec.yml
#   discard-paths: yes